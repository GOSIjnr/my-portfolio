@page "/resume"

<div class="resume">
    <div class="resume__nav">
        <h2 class="resume__title">@_resumeHeader.Title</h2>
        <p class="resume__subtitle">@_resumeHeader.Subtitle</p>

        <div class="resume__nav-button-wrapper">
            @for (int i = 0; i < _resumeSections.Count; i++)
            {
                ResumeTabItemLayoutData? section = _resumeSections[i];

                <button class="resume__nav-button @(CurrentSection == section.Key ? "resume__nav-button--active" : "")"
                    @onclick="@(() => SelectSection(section.Key))">
                    @(section.Label)
                </button>
            }
        </div>
    </div>

    <div class="resume__content">
        @RenderActiveSection()
    </div>
</div>

@code {
    [Inject] private AppContent AppContent { get; set; } = null!;

    private ResumeHeaderLayoutData _resumeHeader => AppContent.Layout.ResumeHeaderLayoutData;
    private List<ResumeTabItemLayoutData> _resumeSections => AppContent.Layout.ResumeTabItemLayoutData;

    private string CurrentSection = "AboutMe";

    private void SelectSection(string section)
    {
        CurrentSection = section;
    }

    private RenderFragment RenderActiveSection() => CurrentSection switch
    {
        "About Me" => @<p>About Me content placeholder.</p>,
"Experience" => @<p>Experience content placeholder.</p>,
"Skills" =>@<p>Skills content placeholder.</p>,
_ => @<p>Section not found.</p>
};
}
