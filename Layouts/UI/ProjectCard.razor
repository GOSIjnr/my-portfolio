<div class="project-card">
    <div class="project-info">
        <div class="project-info__number">@((ProjectNo + 1).ToString("D2"))</div>
        <h2>@ProjectInfo.Title</h2>
        <p>@ProjectInfo.Description</p>
        <p class="tech">@string.Join(", ", ProjectInfo.Technologies)</p>

        <div class="buttons">
            @if (ProjectInfo.LiveLink is not null)
            {
                <a href="@ProjectInfo.LiveLink.Link" target="_blank">üîó Live</a>
            }
            @foreach (var link in ProjectInfo.OtherLinks)
            {
                <a href="@link.Link" target="_blank">@link.Title</a>
            }
        </div>

        <div class="navigation-buttons">
            <button @onclick="Previous" disabled="@IsFirst">‚Üê Previous</button>
            <span class="index-indicator">@($"{ProjectNo + 1} of {TotalProjects}")</span>
            <button @onclick="Next" disabled="@IsLast">Next ‚Üí</button>
        </div>
    </div>

    <div class="project-image">
        <img src="@ProjectInfo.ImageUrl" alt="@ProjectInfo.Title" />
    </div>
</div>

@code {
    [Parameter] public int ProjectNo { get; set; }
    [Parameter] public EventCallback<int> ProjectNoChanged { get; set; }

    [Parameter, EditorRequired] public ProjectInfo ProjectInfo { get; set; } = new();
    [Parameter] public int TotalProjects { get; set; }

    private bool IsFirst => ProjectNo == 0;
    private bool IsLast => ProjectNo == TotalProjects - 1;

    private async Task Previous()
    {
        if (!IsFirst)
            await ProjectNoChanged.InvokeAsync(ProjectNo - 1);
    }

    private async Task Next()
    {
        if (!IsLast)
            await ProjectNoChanged.InvokeAsync(ProjectNo + 1);
    }
}
