<div class="contact-option">
	<div class="contact-option__icon-holder">
		<div class="contact-option__icon" id="@_contactIconId" />
	</div>

	<div class="contact-option__text">
		<p class="contact-option__title">@_contactTitle</p>

		<p class="contact-option__detail">
			@switch (ContactInfo.Type)
			{
				case LinkType.Email:
					<a href="mailto:@ContactInfo.Link">@ContactInfo.Detail</a>
					break;
				case LinkType.Phone:
					<a href="tel:@ContactInfo.Link">@ContactInfo.Detail</a>
					break;
				case LinkType.Link:
					<a href="@ContactInfo.Link" target="_blank" rel="noopener noreferrer">@ContactInfo.Detail</a>
					break;
				default:
					@ContactInfo.Detail
					break;
			}
		</p>
	</div>
</div>

@code {
	[Parameter, EditorRequired] public LinkInfo ContactInfo { get; set; } = new();

	[Inject] private IJSRuntime JS { get; set; } = null!;

	private string _contactIconId = $"contact-option__icon-{Guid.NewGuid():N}";
	private string _contactIconUrl => ContactInfo.IconUrl;
	private string _contactTitle => ContactInfo.Title;
	private string _contactDetail => ContactInfo.Detail;

	private const string FallbackIcon = "images/web.svg";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JS.InvokeVoidAsync("imageLoader.applyMaskWithFallback", _contactIconId, "--contact-icon-image", _contactIconUrl,
			FallbackIcon, true);
		}
	}
}
